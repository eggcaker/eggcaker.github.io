#+TITLE: Emacs.cc
#+HUGO_BASE_DIR: ../
#+HUGO_SECTION: blog
#+SEQ_TODO: TODO DONE
#+PROPERTY: header-args :eval never-export
#+OPTIONS: creator:t toc:nil

* Blog
** TODO 酒后胡言乱语                                                                                        :Drink:
:PROPERTIES:
:EXPORT_FILE_NAME: ano_and_sono_diffs
:END:
** DONE あの和その的区别                                                                                 :Japanese:
CLOSED: [2020-11-29 Sun 23:47]
:PROPERTIES:
:EXPORT_FILE_NAME: ano_and_sono_diffs
:ID:       b872ea3d-0a70-43fb-8aa4-aa80c3b03e30
:END:
这个区别其实是こ そ あ系做文脉指示时的区别。
そ系在一方了解而对方不了解的信息，再次被提及时使用。
あ系用来提及双方都拥有的信息。另外自言自语时也用あ系。
也就是说如果两个人对话，说到过去的事情，如果那个时刻是说话方了解而听话方不了解的事情，用その時，
如果是双方都了解的时刻、用あの時。如果句子是自言自语，用あの時.
** DONE ここ/そこ/あそこは名です :Japanese:
CLOSED: [2020-11-29 Sun 23:21]
:PROPERTIES:
:EXPORT_FILE_NAME: kuku_soku_asoku_desu
:ID:       dc97948e-adad-4cd5-a2bb-90dd02013424
:END:
1. ここ/そこ/あそこは名です
   指示场所时，用“ここ”“そこ”“あそこ”。所表示的位置关系与“これ”“それ”“あれ”相同。
   1) ここ は　デパートです。（这里是百货商店。）
   2) そこ は　図書館です。（那里是图书馆。）
   3) あそこ は　入り口です。（那儿是入口。）

2. 名 は 名　[场所]です 表示“名词”存在于“名词”【场所】。
   a. 食堂 は デパートの７階 です。（食堂在百货商店的７层。）
   b. トイレ は ここです。（厕所在这儿。）
   c. 小野さん は 事務所 です。（小野女士在事务所。）

注意:
"小野さんは事務所です" 的汉语译文是 "小野女士在事务所。”不能译为“小野女士是事务
所。” 日语的“は”比汉语的“是”更为广泛的含义。在这里表示小野女士在什么地方。
“トイレは　ここです”意思是“厕所在这儿。”是将“トイレ”作为话题来阐述。
而不是将“ここ”作为话题来阐述，意思是“这里是厕所。”

1. 名 は どこですか
用于询问存在的场所。
1) トイレは　どこですか。（厕所在哪儿？）
   ――あちら　です。（在那儿。）
2) あなたの　かばん　は　どこですか?（你的包在哪儿？）
   ――私の かばん　は　ここです。（我的包在这儿。）

** DONE 用 Latex 做识字卡片                                                                         :Chinese:Latex:
CLOSED: [2020-03-21 Sat 10:08]
:PROPERTIES:
:EXPORT_FILE_NAME: use_latex_to_write_word_card
:ID:       400E1263-511D-4F64-A163-10FE53978312
:END:

最近因为没有什么事，折腾了一下 Latex, 主要的原因也是因为在网上看到了一个人用 Latex
做了[[https://c-tan.com/zh/post/latex-hanzi-gezi/][识字卡片]]，第一眼看到真心的觉得好漂亮，但是按照作者说的

#+BEGIN_QUOTE
由于是自用， 因此我希望这套排版是独一无二的， 所以也就不放出源码了。
其实基本上看到效果就可以猜出用了哪些宏包。
#+END_QUOTE

人啊，都是越得不到的越想得到。因为这位朋友不想开源，所以也就想照着图片从零开始撸。
因为电脑里本身就有 MacTex, 安装就省了，直接开始 style 定制，也许过些日子应该好
好整理一下写写 Latex 的环境配置。

其实今天想写个博客记录一下是因为今天早上花了 2 小时解决了个让人抓狂的小 bug, 就是
[[https://ctan.org/pkg/tcolorbox?lang=en][tcolorbox]] 标题高度问题。这个是有问题的展示

#+ATTR_HTML: width="150px"
#+ATTR_ORG: :width 150
[[file:./images/tcolorbox_height_bug.png]]

可以看到，第一行的中和下的标题拼音不一样高，因为我在定义高度的时候，给了标题一个
上下的距离，其实后来测试发现，不加这个距离也是一样的，因为标题的高度是根据文字的
高度来的。这里应为 =xia= 所有字的高度都没有 =zhong= 高，导致高度不一致。今天早上
在 SO 里挨着个的看 tcolorbox 的相关的问题。最后找到了[[https://tex.stackexchange.com/questions/435486/enforce-total-height-of-tcolorbox-title][这个]]。效果：

#+ATTR_HTML: width="200px"
#+ATTR_ORG: :width 200
[[file:./images/tcolorbox_height_fix.png]]

一部分代码：

#+BEGIN_SRC latex :exports code
\chapter{方向位置}
\section*{\kaishu{上下左右 }}
\label{sec:lesson01}
\subsection{上下左右}
\label{sec:subsec:l1_s1}
\card{shang4}{上} \card{zhong1}{中} \card{xia4}{下}
\card{ren2}{人} \card{kou3}{口} \card{shou3}{手}

#+END_SRC

[[https://github.com/eggcaker/duolingo-with-latex][代码]] Yoo!

** DONE 折腾一下输入法 :Mac:IME:
印象中应该是 99 年暑假的时候，在县城的一个学校里开始学的五笔，一直到现在大概有二
十年了，有一段时间还把手机里的输入法设置成了五笔。那时候的感觉就是一时用一时爽、
一直用一直爽。但是最近两年也许是年纪大了的缘故，总感觉有时候很熟悉的一个字突然想
不起来了，是那种一点也想不起来什么样子的。所以想着重新试试拼音类输入法

既然说的是要折腾那就得找个有玩儿头的东西[[https://rime.im][Rime]]，这个东西可以说是个输入法框架，所有
的东西都是可配置的，每个平台有自己相应的输入法实现，我用到人就是 mac 和 Emacs 了。搞
起来才知道真的坑啊！
*** mac 系統
苹果系统下还算简单，苹果下的官方输入法实现叫【鼠鬚管】。基本上按照[[https://github.com/rime/squirrel/blob/master/INSTALL.md][安装指南]]，基本
上没有什么坑就可以使用了。然后按照官方的提示可以用[[https://github.com/rime/plum][plum]]，基本上就按照默认安装就
可以用了。其实就是多了一些默认的配置文件，然后在配置文件里把
=default_custom.yaml= 改成自己需要的就可以了。
#+BEGIN_SRC yaml
 patch:
  menu:
    page_size: 8
  schema_list:
  - schema: luna_pinyin_simp     # 朙月拼音 简化字
  - schema: luna_pinyin_fluency   # 语句流
  - schema: double_pinyin_flypy   # 小鶴雙拼
  - schema: wubi_pinyin          # 五笔拼音混合輸入
#+END_SRC
这里的配置是相当于顺序开启配置是相当于顺序开启了 4 种输入法方案，默认是简体中文输入法。
*** Emacs 配置
Emacs 的配置相对来说就要复杂一些了，需要安装的东西有：
- [[https://tumashu.github.io/pyim/][pyim]] 
- [[https://github.com/cute-jumper/fcitx.el][fcitx]]
- [[github://merrickluo/liberime][liberime]]
- [[https://github.com/xcodebuild/fcitx-remote-for-osx][fcitx-remote-fox-osx]]
  
我现在用的是 doom emacs，所以创建了个 [[https://github.com/eggcaker/.doom.d/blob/develop/modules/private/my-chinese/][private module]] 来配置 pyim，大部分的代码都
是从 doom 的 chinese module 里抄过来的。从 pyim 的作者那里也抄了一些，只是绑定了个
新的快捷键用来切换英文到中文
#+BEGIN_SRC elisp
(map! "C-M-s-i" 'pyim-convert-code-at-point)
#+END_SRC
这里的 =C-M-s= 其实是 Capslock, 只是做了个 mappping, 用到的软件是
Karabiner-Elements, 所有配置好后，发现了个问题就是在切换打开输入法后只能输入英语，
后来发现是 fcitx-remote-for-osx 的原因，就像文档里说的，不能用 brew 安装，只能自己
编译。

** DONE Start Blog with Emacs and Hugo :Blog:Emacs:
CLOSED: [2020-02-28 Fri 15:38]
:PROPERTIES:
:EXPORT_FILE_NAME: blog_with_emacs_hugo
:END:

因为有了二胎，裸辞在家照顾家人所有了有大把的时间可以折腾一些东西，除了开始学习日
语重新的又把自己的了博客整理了下。之前一直是在各种工具、各种平台之间跳来跳去，其
实根本没有真正安静下来写一些东西。这次借着把 Emacs 的配置文件转到[[github://hlissner/doom-emacs][doom-emacs]]的机会
看到了在 doom-emacs 里默认是支持的 hugo，那就 hugo 吧。

这两天在整理配置的时候看到了一篇文章是[[https://yihui.org/cn/2019/07/inner-peace/][如何想静静]],+很巧+的是，这个博客的 theme 就是作
者写的，里面写到一句话：

#+BEGIN_QUOTE
我已经多次鼓吹“我网故我在”的观点了，只是真正的响应者甚寡。很多人听我忽悠，随手搭
个网站， 但也就撂在那儿不管了。他们没听到我的后一句话：网站是用来积累成就的，而
简历可以是成就的堆砌汇总处。最初可以从堆砌小成就开始，把你写的作业、拍的照片、做
的菜肴统统发上来。勿以事小而不堆。很多小事的价值，要过很多年你才能发现（比如十一
年）。除非你记忆力超群，否则凡是没有写下来的东西你很快就会忘，而你忘记的事情跟没
做也没什么区别。换句话说，你差不多算是在白活。记住“堆砌”。
#+END_QUOTE

其实仔细想想，挺好，其实这么多年下来就是自己太浮躁了，也导致了博客网站折腾来折腾
去，却从来没有什么积累。那就从现在开始好了，就像他说的一样，很多小事的价值要很多
年才能发现。那就等到下一个十年再见吧。

* Footnotes
* COMMENT Local Variables                          :ARCHIVE:
# Local Variables:
# eval: (org-hugo-auto-export-mode)
# End:
