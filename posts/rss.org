#+TITLE: 大道至简 - emacs.cc

* How To Hack Wslg Clipboard
:PROPERTIES:
:RSS_PERMALINK: how-to-hack-wslg-clipboard.html
:PUBDATE:  2021-12-01
:ID:       4f8ca2e8-328c-4ddd-80ee-49763b7f55aa
:END:
After setup wslg on my windows11, I use the wsl's emacs as my primay editor, the basic workflow most time is webbrowser(Google Chrome) on windows.
Then coding on Emacs. The problem is the clipboard system not really working very well issue [[https://github.com/microsoft/wslg/issues/15][#15]] github.
So I did hack solution:

create a command in wsl /usr/local/bin/wclip
inset /mnt/c/path-to-pwsh.exe -NonInteractive -NoLogo -NoProfile -Command "get-clipboard -Raw"
call wclip after copy something on windows

like for emacs
#+begin_src emacs-lisp
  (defun get-windows-clipboard ()
    (interactive)
    (insert (s-replace "" "" (shell-command-to-string "wclip"))))
#+end_src

it's slower than native way that for sure, but it works every time.
* How To Setup Wsl Emacs On Windows
:PROPERTIES:
:RSS_PERMALINK: how-to-setup-wsl-emacs-on-windows.html
:PUBDATE:  2021-12-02
:ID:       330355e7-25b7-4285-bde3-186aa9caf337
:END:
I plan move all my workflow and codding work into wsl. Just because the magit's performance issue on windows make me wanna cry.
There are is how I setup the workflow and configurations.

*** Install WSL distrbution
    :PROPERTIES:
    :ID:       5820613a-aa4a-4eec-ac11-df31b37db40e
    :END:
I choice debian over Ubuntu, hard to say ubuntu is not good, just personal choice.

*** Install Emacs and some gui applications
    :PROPERTIES:
    :ID:       ddf181bb-9113-4dda-ab83-1e0ee54049f5
    :END:

To use the gui version of emacs,should join the weindows insider preview as writting time.

Emacs
Nyxt (a lisp based keyboar driving webbrowser, everything is hackable)

***  Config the windows emacsclient to open file from Emacs on WSL
    :PROPERTIES:
    :ID:       623618ba-2d80-4716-bed0-f793a5560b5c
    :END:
Set =server_name= in emacs configuations to emacs_server_27_2
Create a exe to wrapper the wsl's emacsclient to open file(deno version)
#+begin_src js :tangle wslemacsclient.ts
  const ff_cmd = Deno.run ({ cmd: ["wsl", "wslpath", "-a", Deno.args[0].replaceAll("\\", "/")],stdout: "piped", stderr: "piped"});
  const ff = await ff_cmd.output();
  ff_cmd.close();
  const fp =new TextDecoder().decode(ff);
  const p = Deno.run({ cmd: ["wsl", "emacsclient", "--create-frame", "--socket-name=/mnt/wslg/runtime-dir/emacs/emacs_server_27_2", fp]});
  await p.status();
#+end_src
compile this scrip to exe with deno
#+begin_src sh
  deno compile --allow-run wslemacsclient.ts
#+end_src
copy the generated wslemacsclient to some directory in $PATH
edit regstration with regedit add =OpenWith ...=
#+begin_src example
  Windows Registry Editor Version 5.00

  [HKEY_CLASSES_ROOT\*\shell\Open with WSL EmacsClient\command]
  @="wslemacsclient.exe %1 /s"
#+end_src
* Japanese Ano Sono Diffrent
:PROPERTIES:
:RSS_PERMALINK: japanese-ano-sono-diffrent.html
:PUBDATE:  2020-11-29
:ID:       496ce483-79c4-4439-8e01-559853665223
:END:
这个区别其实是 =こ=, =そ=, =あ= 系做文脉指示时的区别。
そ系在一方了解而对方不了解的信息，再次被提及时使用。
あ系用来提及双方都拥有的信息。另外自言自语时也用あ系。
也就是说如果两个人对话，说到过去的事情，如果那个时刻是说话方了解而听话方不了解的事情，用その時，
如果是双方都了解的时刻、用あの時。如果句子是自言自语，用あの時.
* Play Emacs Ime On Mac
:PROPERTIES:
:RSS_PERMALINK: play-emacs-ime-on-mac.html
:PUBDATE:  2020-11-12
:ID:       e896e526-743d-4b9d-93d8-64afecbde5b5
:END:
印象中应该是 99 年暑假的时候，在县城的一个学校里开始学的五笔，一直到现在大概有二
十年了，有一段时间还把手机里的输入法设置成了五笔。那时候的感觉就是一时用一时爽、
一直用一直爽。但是最近两年也许是年纪大了的缘故，总感觉有时候很熟悉的一个字突然想
不起来了，是那种一点也想不起来什么样子的。所以想着重新试试拼音类输入法

既然说的是要折腾那就得找个有玩儿头的东西[[https://rime.im][Rime]]，这个东西可以说是个输入法框架，所有
的东西都是可配置的，每个平台有自己相应的输入法实现，我用到人就是 mac 和 Emacs 了。搞
起来才知道真的坑啊！
*** mac 系統
    :PROPERTIES:
    :ID:       167d70ba-3959-4877-9a79-15cdcce1f133
    :END:
苹果系统下还算简单，苹果下的官方输入法实现叫【鼠鬚管】。基本上按照[[https://github.com/rime/squirrel/blob/master/INSTALL.md][安装指南]]，基本
上没有什么坑就可以使用了。然后按照官方的提示可以用[[https://github.com/rime/plum][plum]]，基本上就按照默认安装就
可以用了。其实就是多了一些默认的配置文件，然后在配置文件里把
=default_custom.yaml= 改成自己需要的就可以了。
#+begin_src yaml
  patch:
   menu:
     page_size: 8
   schema_list:
   - schema: luna_pinyin_simp     # 朙月拼音 简化字
   - schema: luna_pinyin_fluency   # 语句流
   - schema: double_pinyin_flypy   # 小鶴雙拼
   - schema: wubi_pinyin          # 五笔拼音混合輸入
#+end_src
这里的配置是相当于顺序开启配置是相当于顺序开启了 4 种输入法方案，默认是简体中文输入法。
*** Emacs 配置
    :PROPERTIES:
    :ID:       bace042e-bc99-49ce-a7eb-94f447abf396
    :END:
Emacs 的配置相对来说就要复杂一些了，需要安装的东西有：
[[https://tumashu.github.io/pyim/][pyim]]
[[https://github.com/cute-jumper/fcitx.el][fcitx]]
[[https://github.com/merrickluo/liberime][liberime]]
[[https://github.com/xcodebuild/fcitx-remote-for-osx][fcitx-remote-fox-osx]]

我现在用的是 doom emacs，所以创建了个 [[https://github.com/eggcaker/.doom.d/blob/develop/modules/private/my-chinese/][private module]] 来配置 pyim，大部分的代码都
是从 doom 的 chinese module 里抄过来的。从 pyim 的作者那里也抄了一些，只是绑定了个
新的快捷键用来切换英文到中文
#+begin_src elisp
  (map! "C-M-s-i" 'pyim-convert-code-at-point)
#+end_src
这里的 =C-M-s= 其实是 Capslock, 只是做了个 mappping, 用到的软件是
Karabiner-Elements, 所有配置好后，发现了个问题就是在切换打开输入法后只能输入英语，
后来发现是 fcitx-remote-for-osx 的原因，就像文档里说的，不能用 brew 安装，只能自己
编译。
* Start Blog With Emacs
:PROPERTIES:
:RSS_PERMALINK: start-blog-with-emacs.html
:PUBDATE:  2020-02-28
:ID:       9f529a3f-eb81-43f4-842a-73d48f666f91
:END:
因为有了二胎，裸辞在家照顾家人所有了有大把的时间可以折腾一些东西，除了开始学习日
语重新的又把自己的了博客整理了下。之前一直是在各种工具、各种平台之间跳来跳去，其
实根本没有真正安静下来写一些东西。这次借着把 Emacs 的配置文件转到[[https://github.com/hlissner/doom-emacs][doom-emacs]]的机会
看到了在 doom-emacs 里默认是支持的 hugo，那就 hugo 吧。

这两天在整理配置的时候看到了一篇文章是[[https://yihui.org/cn/2019/07/inner-peace/][如何想静静]],+很巧+的是，这个博客的 theme 就是作
者写的，里面写到一句话：

#+begin_quote
我已经多次鼓吹“我网故我在”的观点了，只是真正的响应者甚寡。很多人听我忽悠，随手搭
个网站， 但也就撂在那儿不管了。他们没听到我的后一句话：网站是用来积累成就的，而
简历可以是成就的堆砌汇总处。最初可以从堆砌小成就开始，把你写的作业、拍的照片、做
的菜肴统统发上来。勿以事小而不堆。很多小事的价值，要过很多年你才能发现（比如十一
年）。除非你记忆力超群，否则凡是没有写下来的东西你很快就会忘，而你忘记的事情跟没
做也没什么区别。换句话说，你差不多算是在白活。记住“堆砌”。
#+end_quote

其实仔细想想，挺好，其实这么多年下来就是自己太浮躁了，也导致了博客网站折腾来折腾
去，却从来没有什么积累。那就从现在开始好了，就像他说的一样，很多小事的价值要很多
年才能发现。那就等到下一个十年再见吧。
* Test Org Mode Feature
:PROPERTIES:
:RSS_PERMALINK: test-org-mode-feature.html
:PUBDATE:  2021-11-11
:ID:       f8aa6707-4bfe-494a-afac-2582287d27db
:END:
Play with the ditta char support on org-mode

#+begin_src ditaa :file ./images/ditaa_test.png :cmdline -r
  /----\ /----\
  |c33F| |cC02|
  |    | |    |
  \----/ \----/

  /----\ /----\
  |c1FF| |c1AB|
  |    | |    |
  \----/ \----/

  +---------+
  | cBLU    |
  |         |
  |    +----+
  |    |cPNK|
  |    |    |
  +----+----+
#+end_src

